{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\web development 2\\\\Positive\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst express = require('express');\n\nconst app = express();\n\nconst https = require('https');\n\nconst bodyParser = require('body-parser');\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.get('/', (req, res) => {\n  const query = \"london\";\n  const apiKey = \"89787334877ea6f589d0ba3b02886602\";\n  const unit = \"metric\";\n  const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + query + \"&appid=\" + apiKey + \"&units=\" + unit;\n  https.get(url, function (response) {\n    response.on(\"data\", function (data) {\n      const weather_data = JSON.parse(data);\n      const temp = weather_data.main.temp;\n      const icon = weather_data.weather[0].icon;\n      const imageUrl = \"https://openweathermap.org/img/wn/\" + icon + \"@2x.png\"; /// console.log(weather_data);\n\n      res.write(\"<p>My Server is crashed</p>\");\n      res.write(\"<p>Temperature at \" + query + \" is \" + temp + \"</p>\");\n      res.write(\"<img src=\" + imageUrl + \">\"); // res.sendFile(__dirname+\"/index.html\");\n\n      res.send();\n    });\n  });\n});\napp.listen(3000, () => {\n  console.log(\"Server is active at 3000!\");\n});\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\")); // const express = require('express')\n// const app = express();\n// const https = require('https');\n// const bodyParser = require('body-parser');\n// app.use(bodyParser.urlencoded({extended:true}));\n//\n//1. Create a new React app.\n//2. Create a App.jsx component.\n//3. Create a Header.jsx component that renders a <header> element\n//to show the Keeper App name in an <h1>.\n//4. Create a Footer.jsx component that renders a <footer> element\n//to show a copyright message in a <p> with a dynamically updated year.\n//5. Create a Note.jsx component to show a <div> element with a\n//<h1> for a title and a <p> for the content.\n//6. Make sure that the final website is styled like the example shown here:\n//https://l1pp6.csb.app/\n//HINT: You will need to study the classes in teh styles.css file to appy styling.","map":{"version":3,"sources":["C:/xampp/htdocs/web development 2/Positive/src/index.js"],"names":["React","ReactDOM","App","express","require","app","https","bodyParser","use","urlencoded","extended","get","req","res","query","apiKey","unit","url","response","on","data","weather_data","JSON","parse","temp","main","icon","weather","imageUrl","write","send","listen","console","log","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;;AAEA,MAAMG,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AAEAC,GAAG,CAACG,GAAJ,CAAQD,UAAU,CAACE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AAEAL,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAY,CAACC,GAAD,EAAKC,GAAL,KAAW;AACnB,QAAMC,KAAK,GAAG,QAAd;AACA,QAAMC,MAAM,GAAG,kCAAf;AACA,QAAMC,IAAI,GAAC,QAAX;AACA,QAAMC,GAAG,GAAG,uDAAqDH,KAArD,GAA2D,SAA3D,GAAqEC,MAArE,GAA4E,SAA5E,GAAsFC,IAAlG;AACAV,EAAAA,KAAK,CAACK,GAAN,CAAUM,GAAV,EAAc,UAASC,QAAT,EAAkB;AAC5BA,IAAAA,QAAQ,CAACC,EAAT,CAAY,MAAZ,EAAmB,UAASC,IAAT,EAAc;AAC7B,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAArB;AACA,YAAMI,IAAI,GAAGH,YAAY,CAACI,IAAb,CAAkBD,IAA/B;AACA,YAAME,IAAI,GAAGL,YAAY,CAACM,OAAb,CAAqB,CAArB,EAAwBD,IAArC;AACA,YAAME,QAAQ,GAAC,uCAAqCF,IAArC,GAA0C,SAAzD,CAJ6B,CAK9B;;AACCb,MAAAA,GAAG,CAACgB,KAAJ,CAAU,6BAAV;AACAhB,MAAAA,GAAG,CAACgB,KAAJ,CAAU,uBAAqBf,KAArB,GAA2B,MAA3B,GAAkCU,IAAlC,GAAuC,MAAjD;AACAX,MAAAA,GAAG,CAACgB,KAAJ,CAAU,cAAYD,QAAZ,GAAqB,GAA/B,EAR6B,CAStC;;AACAf,MAAAA,GAAG,CAACiB,IAAJ;AAEF,KAZO;AAcH,GAfD;AAgBH,CArBD;AAsBAzB,GAAG,CAAC0B,MAAJ,CAAW,IAAX,EAAiB,MAAI;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,CAFD;AAIAhC,QAAQ,CAACiC,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAGA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst express = require('express')\n\nconst app = express();\n\nconst https = require('https');\n\nconst bodyParser = require('body-parser');\n\napp.use(bodyParser.urlencoded({extended:true}));\n\napp.get('/',(req,res)=>{\n    const query = \"london\";\n    const apiKey = \"89787334877ea6f589d0ba3b02886602\";\n    const unit=\"metric\";\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\"+query+\"&appid=\"+apiKey+\"&units=\"+unit;\n    https.get(url,function(response){\n        response.on(\"data\",function(data){\n            const weather_data = JSON.parse(data);\n            const temp = weather_data.main.temp;\n            const icon = weather_data.weather[0].icon;\n            const imageUrl=\"https://openweathermap.org/img/wn/\"+icon+\"@2x.png\"\n           /// console.log(weather_data);\n            res.write(\"<p>My Server is crashed</p>\");\n            res.write(\"<p>Temperature at \"+query+\" is \"+temp+\"</p>\");\n            res.write(\"<img src=\"+imageUrl+\">\");\n   // res.sendFile(__dirname+\"/index.html\");\n   res.send();\n\n});\n\n    });\n});\napp.listen(3000 ,()=>{\n    console.log(\"Server is active at 3000!\");\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n// const express = require('express')\n\n// const app = express();\n\n// const https = require('https');\n\n// const bodyParser = require('body-parser');\n\n// app.use(bodyParser.urlencoded({extended:true}));\n//\n\n//1. Create a new React app.\n//2. Create a App.jsx component.\n//3. Create a Header.jsx component that renders a <header> element\n//to show the Keeper App name in an <h1>.\n//4. Create a Footer.jsx component that renders a <footer> element\n//to show a copyright message in a <p> with a dynamically updated year.\n//5. Create a Note.jsx component to show a <div> element with a\n//<h1> for a title and a <p> for the content.\n//6. Make sure that the final website is styled like the example shown here:\n//https://l1pp6.csb.app/\n\n//HINT: You will need to study the classes in teh styles.css file to appy styling.\n"]},"metadata":{},"sourceType":"module"}