{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\web development 2\\\\Positive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\web development 2\\\\Positive\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\web development 2\\\\Positive\\\\src\\\\components\\\\youtube api\\\\YoutubeMain.js\";\nimport React, { Component } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport VideoDetail from \"./VideoDetail\";\nimport axios from \"axios\";\nimport VideoList from \"./VideoList\";\n\nclass YoutubeMain extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.onTermSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(term) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n                params: {\n                  q: term,\n                  key: 'AIzaSyCoOcFY91j60nCxzjmAdK8UqaTl83R4Xvw',\n                  part: 'snippet',\n                  maxResults: 12\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n\n              _this.setState({\n                videos: response.data.items\n              });\n\n              console.log(response.data.items);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.onSelectedVideo = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onsubmit: this.onTermSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-7 col-md-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      video: this.state.selectedVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      onSelectedVideo: this.onSelectedVideo,\n      videos: this.state.videos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nexport default YoutubeMain;","map":{"version":3,"sources":["C:/xampp/htdocs/web development 2/Positive/src/components/youtube api/YoutubeMain.js"],"names":["React","Component","SearchBar","VideoDetail","axios","VideoList","YoutubeMain","state","videos","selectedVideo","onTermSubmit","term","get","params","q","key","part","maxResults","response","setState","data","items","console","log","onSelectedVideo","video","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,WAAN,SAA0BL,SAA1B,CAAqC;AAAA;AAAA;;AAAA;AAAA;AAAA,SACjCM,KADiC,GAC3B;AAACC,MAAAA,MAAM,EAAC,EAAR;AAAWC,MAAAA,aAAa,EAAC;AAAzB,KAD2B;;AAAA,SAEjCC,YAFiC;AAAA,0EAElB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYP,KAAK,CAACQ,GAAN,CAAU,8CAAV,EAAyD;AAC5EC,gBAAAA,MAAM,EAAC;AACHC,kBAAAA,CAAC,EAACH,IADC;AAEHI,kBAAAA,GAAG,EAAC,yCAFD;AAGHC,kBAAAA,IAAI,EAAC,SAHF;AAIHC,kBAAAA,UAAU,EAAC;AAJR;AADqE,eAAzD,CADZ;;AAAA;AACLC,cAAAA,QADK;;AASX,cAAA,KAAI,CAACC,QAAL,CAAc;AAACX,gBAAAA,MAAM,EAACU,QAAQ,CAACE,IAAT,CAAcC;AAAtB,eAAd;;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcC,KAA1B;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA,OAFkB;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAcjCG,eAdiC,GAcdC,KAAD,IAAW;AACzB,WAAKN,QAAL,CAAc;AAACV,QAAAA,aAAa,EAACgB;AAAf,OAAd;AACH,KAhBgC;AAAA;;AAiBjCC,EAAAA,MAAM,GAAG;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAI,KAAKhB,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,eAKI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,eAQI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,eAAe,EAAE,KAAKe,eAAjC;AAAkD,MAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWC,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CAFG,CAAP;AAgBH;;AAlCoC;;AAqCrC,eAAeF,WAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport SearchBar from \"./SearchBar\"\r\nimport VideoDetail from \"./VideoDetail\"\r\nimport axios from \"axios\"\r\nimport VideoList from \"./VideoList\"\r\nclass YoutubeMain extends Component  {\r\n    state={videos:[],selectedVideo:null}\r\n    onTermSubmit = async (term) => {\r\n        const response = await axios.get(\"https://www.googleapis.com/youtube/v3/search\",{\r\n            params:{\r\n                q:term,\r\n                key:'AIzaSyCoOcFY91j60nCxzjmAdK8UqaTl83R4Xvw',\r\n                part:'snippet',\r\n                maxResults:12\r\n            }\r\n        })\r\n        this.setState({videos:response.data.items});\r\n        console.log(response.data.items);\r\n    }\r\n    onSelectedVideo = (video) => {\r\n        this.setState({selectedVideo:video})\r\n    }\r\n    render() {\r\n    return <div>\r\n        <SearchBar onsubmit = {this.onTermSubmit}/>\r\n        <div className=\"container-fluid row\">\r\n        \r\n            <div className=\"col-lg-7 col-md-7\">\r\n                <VideoDetail video={this.state.selectedVideo}/>\r\n            </div>\r\n            <div className=\"col-lg-1\">\r\n                1\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-5\">\r\n                <VideoList onSelectedVideo={this.onSelectedVideo} videos={this.state.videos}/>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n}\r\n}\r\n\r\nexport default YoutubeMain"]},"metadata":{},"sourceType":"module"}